'''Machine Learning Workflow1. Define Goal2. Get Data3. Train-Test-Split4. Explore Data5. Feature Engineering6. Train Model(s)7. Optimize Hyperparameters / Cross Validation (Jump to Feature Engineering)8. Calculate Test Score9. Deploy and Monitor'''import pandas as pdimport numpy as npmy_file = "data/train.csv"df = pd.read_csv(my_file)df.shapedf.head()df.columnsdf.dtypesdf.info() #use output for finding NaNs#set passngerid as indexdf.set_index('PassengerId', inplace = True)#set categorical values as dtype categorynum_cols = ['Age', 'SibSp', 'Parch', 'Fare']for col in df.columns:    if col not in num_cols:        df[col] = df[col].astype('category')#EDAdescriptives_num = df.describe(exclude=['category'])descriptives_numdescriptives_cat = df.describe(include=['category'])descriptives_catcat_cols = descriptives_cat.columnscat_cols#make contingency table for 'Survived' vs every category where unique < 10:#Survived*PclassPclass_crosstab = pd.crosstab(df['Survived'], df['Pclass'], margins=True)Pclass_crosstabPclass_crosstab_norm = pd.crosstab(df['Survived'], df['Pclass'], margins=True, normalize=True)Pclass_crosstab_norm#Survived*SexSex_crosstab = pd.crosstab(df['Survived'], df['Sex'], margins=True)Sex_crosstabSex_crosstab_norm = pd.crosstab(df['Survived'], df['Sex'], margins=True, normalize=True)Sex_crosstab_norm#Survived*Embarked (embarked has null values!)Embarked_crosstab = pd.crosstab(df['Survived'], df['Embarked'], margins=True)Embarked_crosstabEmbarked_crosstab_norm = pd.crosstab(df['Survived'], df['Embarked'], margins=True, normalize=True)Embarked_crosstab_norm#make a visualization of the cross tabs